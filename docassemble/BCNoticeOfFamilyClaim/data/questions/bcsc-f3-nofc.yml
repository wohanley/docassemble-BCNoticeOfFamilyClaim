include:
  - docassemble.AssemblyLine:al_package.yml
  - docassemble.ALBritishColumbia:al_british_columbia.yml
---
comment: |
  The metadata section controls the tab title and saved interview title. You can delete this section if you include this YAML file in another YAML file.
metadata:
  title: |
    Notice of Family Claim
  short title: |
    NoFC
  logo: |
    <div></div>
---
comment: |
  This section is used by AssemblyLine to control how some of the questions work.
mandatory: True
code: |
  interview_metadata # make sure we initialize the object
  if not defined("interview_metadata['bcscf3nofc']"):
    interview_metadata.initializeObject('bcscf3nofc')
  interview_metadata['bcscf3nofc'].update({
    'title': 'Notice of Family Claim for spousal support',
    'short title': 'NoFC',
    'description': 'This interview will help you fill out the forms you need to get the court to tell your spouse to pay you spousal support.',
    'original_form': 'https://www2.gov.bc.ca/assets/gov/law-crime-and-justice/courthouse-services/court-files-records/court-forms/supreme-family/f3.pdf',
    'allowed courts': [
    ],
    'categories': [
      'Family Law',
    ],
    'logic block variable': 'bcscf3nofc',
    'attachment block variable': 'bcscf3nofc_attachment',
    'typical role': 'plaintiff'
  })
---
# Remove `under` part from AL, none of it applies
default screen parts:
  under: |
    
---
features:
  navigation: True
---
sections:
  - review_bcscf3nofc: Review your answers
---
id: interview_order_bcscf3nofc
code: |
  # Set some metadata. Prevents unnecessary questions being asked
  allowed_courts = interview_metadata["bcscf3nofc"]["allowed courts"]
  nav.set_section('review_bcscf3nofc')
  al_form_type = 'starts_case'
  user_role = 'plaintiff'
  users.there_is_another = False

  # Begin interview flow

  bcscf3nofc_intro

  # If the claimant has a lawyer, the lawyer needs to fill out certificates if certain claims are
  # being made. This is not something that this app deals with - it should be left to the lawyer.
  if plaintiff_has_lawyer:
    # not eligible; exit
    plaintiff_understands_not_eligible_because_lawyer

  # Get information about the user and respondent
  str(plaintiffs[0])
  str(respondents[0])

  # "FLA spouses" here are *not* married, but spouses by other FLA criteria
  plaintiff_and_respondent_are_fla_spouses = False

  if plaintiff_and_respondent_did_begin_marriage_like_relationship:
    marriage_like_relationship_start_date
    marriage_like_relationship_two_years
    if marriage_like_relationship_two_years:
      plaintiff_and_respondent_are_fla_spouses = True
    if not marriage_like_relationship_two_years:
      plaintiff_and_respondent_have_children
      if plaintiff_and_respondent_have_children:
        plaintiff_and_respondent_are_fla_spouses = True

  if plaintiff_and_respondent_did_marry:
    plaintiff_and_respondent_are_fla_spouses = False
    marriage_date

  if not plaintiff_and_respondent_did_marry and not plaintiff_and_respondent_are_fla_spouses:
    # not eligible; exit
    plaintiff_understands_not_eligible_because_not_spouse

  if plaintiff_and_respondent_did_separate:
    separation_date

  if plaintiff_and_respondent_were_divorced:
    divorce_date

  if not plaintiff_and_respondent_were_divorced and not plaintiff_and_respondent_did_separate:
    # not eligible; exit
    plaintiff_understands_not_eligible_because_not_separated

  # Enough information now to take a pretty good guess at
  # {plaintiff,respondent}_relationship

  if plaintiff_and_respondent_did_begin_marriage_like_relationship:
    plaintiff_relationship_suggestion = f"in a marriage-like relationship with {str(respondents[0])}"
    respondent_relationship_suggestion = f"in a marriage-like relationship with {str(plaintiffs[0])}"
  if plaintiff_and_respondent_did_marry:
    plaintiff_relationship_suggestion = f"married to {str(respondents[0])}"
    respondent_relationship_suggestion = f"married to {str(plaintiffs[0])}"
  if plaintiff_and_respondent_did_separate:
    plaintiff_relationship_suggestion = f"separated from {str(respondents[0])}"
    respondent_relationship_suggestion = f"separated from {str(plaintiffs[0])}"
  if plaintiff_and_respondent_were_divorced:
    plaintiff_relationship_suggestion = f"divorced from {str(respondents[0])}"
    respondent_relationship_suggestion = f"divorced from {str(plaintiffs[0])}"

  plaintiff_relationship
  respondent_relationship

  # What support do you want?

  spousal_support_current
  claimant_seeks_divorce_act_order
  claimant_seeks_family_law_act_order
  claimant_proposes_support

  if claimant_proposes_support:
    spousal_support_proposed

  claimant_income_annual_gross
  if claimant_knows_spouse_income:
    spouse_income_annual_gross
    spouse_income_facts

  # Case history

  prior_written_agreement_does_relate
  prior_court_order_does_relate
  prior_court_proceeding_does_relate
  nothing_prior_does_relate

  if prior_written_agreement_does_relate:
    prior_written_agreement_date
  if prior_court_order_does_relate:
    prior_court_order_date
  if prior_court_proceeding_does_relate:
    prior_court_proceeding_file_number
    prior_court_proceeding_registry

  court_file_number
  court_registry

  # Signature etc

  str(plaintiffs[0])
  plaintiffs[0].address.block()
  plaintiff_fax
  signature_date

  bcscf3nofc_preview_question # Pre-canned preview screen

  basic_questions_signature_flow
  plaintiffs[0].signature

  bcscf3nofc = True
---
# Intro screen mostly lifted from docassemble-AssemblyLine
id: intro
decoration: form-lineal
question: |
  Notice of Family Claim for spousal support
subquestion: |
  This app will help you fill out the forms you need to get the court to tell your spouse to pay you spousal support. The court calls this Form F3, or Notice of Family Claim. There are 3 steps:

  Step 1. Answer questions that will fill in your form for you.  
  Step 2. Preview the completed form.  
  Step 3. Download the final form. You will need to deliver it to the court on your own, whether in the mail or online.  

  Tap the {green words} in any screen for a definition or more information.

continue button field: bcscf3nofc_intro
right: |
  % if user_has_saved_answers:
  ${fa_icon("bell", color="primary", size="sm")}
  Saved answers available!  
  
  ${action_button_html(url_action('load_answer'), icon="folder-open", label=word("View answers"), size="sm" )}
  % endif
terms:
  green words: |
    Green words are legal terms or a short way of referring to something that needs more explanation. The definition or explanation pops up when you tap the green words.
---
id: Placeholder preview screen
continue button field: bcscf3nofc_preview_question
question: |
  Placeholder preview screen
subquestion: |
  Here is a preview of the form you'll sign on the next page. 
  
   ${ bcscf3nofc_attachment['preview'] }
---
id: respondent name
question: What is the name of the person you want spousal support from?
fields:
  - First name: other_parties[0].name.first
  - Last name: other_parties[0].name.last
  - Suffix: other_parties[0].name.suffix
    code: |
      name_suffix()
    required: False
---
id: Case history
question: |
  Has anything legal happened with this case so far?
fields:
  - "I already made a written agreement related to this matter.": prior_written_agreement_does_relate
    datatype: yesno
  - 'The court has already made an order about this matter.': prior_court_order_does_relate
    datatype: yesno
  - 'There has already been a court proceeding related to this matter.': prior_court_proceeding_does_relate
    datatype: yesno
  - 'None of the above applies. There is no history for this case.': nothing_prior_does_relate
    datatype: yesno
---
id: written agreement
question: When did you sign a written agreement about this matter?
fields:
  - Date of signing: prior_written_agreement_date
    datatype: date
---
id: court order date
question: When did the court issue an order about this matter?
fields:
  - Date of court order: prior_court_order_date
    datatype: date
---
id: prior proceeding registry
question: What was the registry for the court proceeding that already happened?
fields:
  - Registry: prior_court_proceeding_registry
    datatype: object
    choices:
      - court_registries
---
id: prior proceeding file number
question: What was the file number for the court proceeding that already happened?
subquestion: |
  Courts use file numbers to keep track of cases. If there has already been a court process related to the problem you have now, the court would have created a file number for that process at the time that it was happening.
fields:
  - File number: prior_court_proceeding_file_number
---
id: plaintiff relationship
question: In a few words, describe your relationship to ${ str(respondents[0]) }.
fields:
  - "I am: ": plaintiff_relationship
    default: ${ plaintiff_relationship_suggestion }
    hint: "for example: ${ plaintiff_relationship_suggestion }"
---
id: respondent relationship
question: "In a few words, describe ${ str(respondents[0]) }'s relationship to ${ str(plaintiffs[0]) }."
subquestion: |
  This will probably be almost the same as how you described your relationship to them, just the other way around.
fields:
  - "${ str(respondents[0]) } is": respondent_relationship
    default: ${ respondent_relationship_suggestion }
    hint: "for example: ${ respondent_relationship_suggestion }"
---
question: |
  Were you and ${ str(respondents[0]) } ever married?
field: plaintiff_and_respondent_did_marry
buttons:
  - Yes, we have been married: True
  - No, we were never married: False
---
question: |
  Were you and ${ str(respondents[0]) } ever in a marriage-like relationship?
subquestion: |
  "Marriage-like" is a legal phrase that means you weren't legally married, but you did have a relationship that was similar enough to marriage that some of the laws about marriage apply to you. Some people call this "common-law" marriage, but that isn't how the law refers to it in British Columbia. You may have been in a marriage-like relationship at some point before getting married.

  It can be hard to tell sometimes whether a relationship was marriage-like or not, and sometimes people argue over it. When courts need to decide whether a relationship was marriage-like, they ask questions like: Did the people live together under the same roof? Did they share a bed? Did they share money? How did they describe their relationship to family and friends? There are no exact rules. You can read more about marriage-like relationships on [Clicklaw](https://wiki.clicklaw.bc.ca/index.php/Unmarried_Spouses).
field: plaintiff_and_respondent_did_begin_marriage_like_relationship
buttons:
  - Yes, our relationship did become marriage-like: True
  - No, our relationship was never marriage-like: False
---
question: |
  When did you and ${ str(respondents[0]) } begin to have a marriage-like relationship?
subquestion: |
  For example, this might be the date that you first moved in together.
fields:
  - Date that relationship became marriage-like: marriage_like_relationship_start_date
    datatype: date
---
question: |
  Did you and ${ str(respondents[0]) } continue your marriage-like relationship for 2 years or more?
field: marriage_like_relationship_two_years
buttons:
  - Yes, our marriage-like relationship continued for at least 2 years: True
  - No: False
---
question: |
  Do you and ${ str(respondents[0]) } have children?
field: plaintiff_and_respondent_have_children
buttons:
  - Yes: True
  - No: False
---
question: |
  Have you and ${ str(respondents[0]) } been divorced?
field: plaintiff_and_respondent_were_divorced
buttons:
  - Yes, we were divorced: True
  - No, we are still legally married: False
---
question: |
  Have you and ${ str(respondents[0]) } separated?
field: plaintiff_and_respondent_did_separate
buttons:
  - Yes, we separated: True
  - No, we are still together: False
---
question: |
  When did you and ${ str(respondents[0]) } get married?
fields:
  - Date of marriage: marriage_date
    datatype: date
---
question: |
  When did you and ${ str(respondents[0]) } separate?
fields:
  - Date of separation: separation_date
    datatype: date
---
question: |
  When were you and ${ str(respondents[0]) } divorced?
fields:
  - Date of divorce: divorce_date
    datatype: date
---
question: |
  It doesn't look like you're eligible for spousal support.
subquestion: |
  To receive spousal support, at least one of these must apply to you:
    1. You and ${ str(respondents[0]) } were married.
    2. You and ${ str(respondents[0]) } lived in a marriage-like relationship and had children.
    3. You and ${ str(respondents[0]) } lived in a marriage-like relationship for at least 2 years.

  If you think one of these categories does apply to you, there might be a mistake in this app, or you might have made a mistake using it. You can start over if you want to try again.
field: plaintiff_understands_not_eligible_because_not_spouse
buttons:
  - Exit: leave
  - Start over: restart
---
question: |
  It doesn't look like you're eligible for spousal support.
subquestion: |
  To receive spousal support, uou and ${ str(respondents[0]) } must be separated or divorced. If you think one of these categories does apply to you, there might be a mistake in this app, or you might have made a mistake using it. You can start over if you want to try again.
field: plaintiff_understands_not_eligible_because_not_separated
buttons:
  - Exit: leave
  - Start over: restart
---
id: spousal support current
question: |
  How does your spousal support work right now?
subquestion: |
  Describe how your spousal support works right now. How much are you paid? How often are you paid?
fields:
  - 'My current spousal support arrangements are: ': spousal_support_current
    maxlength: 539
---
id: spousal support order options
question: |
  What kind of support do you want the court to order?
subquestion: |
  The Divorce Act and the Family Law Act are two laws that both say how support should work. You can ask for the support that one or both of those laws say you should get, or you can make your own suggestion.
fields:
  - 'I want the support described in the Divorce Act.': claimant_seeks_divorce_act_order
    datatype: yesno
  - 'I want the support described in the Family Law Act.': claimant_seeks_family_law_act_order
    datatype: yesno
  - 'I want to ask for different support arrangements.': claimant_proposes_support
    datatype: yesno
---
id: spousal support proposed
question: |
  How should your spousal support work?
subquestion: |
  Describe how you would like your spousal support to work. How much should you be paid? How often should you be paid? How long should should you keep receiving payments?
fields:
  - 'My spousal support should work like this: ': spousal_support_proposed
    maxlength: 539
---
id: plaintiff income
question: |
  What is your gross annual income?
subquestion: |
  "Gross annual income" is the total amount of money you make in a year before you pay taxes.
fields:
  - 'My gross annual income is: ': claimant_income_annual_gross
    datatype: currency
    min: 0
---
id: spouse income known
question: |
  Do you know your spouse's gross annual income?
field: claimant_knows_spouse_income
buttons:
  - Yes, I do know: True
  - No, I don't know: False
auto terms:
  gross annual income: |
    "Gross annual income" is the total amount of money your spouse makes in a year before they pay taxes.
---
id: spouse income
question: |
  What is your spouse's gross annual income?
subquestion: |
  You'll need to explain how you know your spouse's income, or at least why you believe it to be a certain amount. For example, you might have filed your taxes together, or you might be able to look up the average pay for someone with the same job as your spouse.
fields:
  - "My spouse's gross annual income is: ": spouse_income_annual_gross
    datatype: currency
    min: 0
  - "I believe this is my spouse's gross annual income because of these facts: ": spouse_income_facts
    maxlength: 539
auto terms:
  gross annual income: |
    "Gross annual income" is the total amount of money your spouse makes in a year before they pay taxes.
---
id: plaintiff has lawyer
question: Do you have a lawyer?
subquestion: |
  If you have a lawyer, your lawyer needs to fill out some extra sections on the forms you need, and this app can't fill them out for you.
field: plaintiff_has_lawyer
buttons:
  - I do have a lawyer: True
  - I do not have a lawyer: False
---
question: This app doesn't work for people who have lawyers.
subquestion: |
  If you have a lawyer, your lawyer needs to fill out some extra sections on the forms you need. This is to make sure that your lawyer has discussed all your options with you, and that filing this form is the right choice for you. This app can't fill out those extra sections for you. Instead, ask your lawyer to help you fill out the forms.
field: plaintiff_understands_not_eligible_because_lawyer
buttons:
  - Exit: leave
  - Start over: restart
---
id: lawyer name
question: What is your lawyer's name?
fields:
  - "Lawyer's name": plaintiff_lawyer_name
---
id: plaintiff email
question: |
  Would you like the court to be able to contact you through email?
subquestion: |
  If you have an email address you would like to be contacted at, enter it here. If you don't have an email address, you don't need to enter anything.
fields:
  - Email address: plaintiff_email
    required: False
---
id: plaintiff fax
question: |
  Would you like the court to be able to contact you through fax?
subquestion: |
  If you have a fax number you would like to be reached at, enter it here. If you don't have a fax number, you don't need to enter anything.
fields:
  - Fax number: plaintiff_fax
    required: False
---
id: Court file number
question: |
  % if prior_court_proceeding_does_relate:
  Do you have a court file number for this proceeding?
  % else:
  Do you have a court file number?
  % endif
subquestion: |
  The first time you send a form to the court, they will create a number to help keep track of your case, and they will tell you this number. You should put that number on all the forms you send the court afterwards, including this one. If this is the first form you've filed, then you won't have a file number yet, so you can leave this blank.
  % if prior_court_proceeding_does_relate:
  You will have a different file number for this court process than you did for the court process that already happened.
  % endif
fields:
  - Court file number: court_file_number
    required: False
---
id: Court registry
question: |
  What court registry are you filing with?
subquestion: |
  Registries are the parts of the court system that handle receiving forms, and there are many different registries. Unless you have a good reason to choose a specific registry, you should choose the one closest to where you live.
fields:
  - Court registry: court_registry
    datatype: object
    choices:
      - court_registries
---
progress: 100
mandatory: True
id: Placeholder download screen
question: |
  Download
subquestion: |
  ### Next steps

  % if plaintiff_has_lawyer:
  * Have your lawyer complete the Lawyer's Certificate (the last page of the form).
  % endif
  You will have to file your completed form with the court. You can either mail the form or file it online.

  Option 1: Print the form and mail it to the court registry. The address for the ${ court_registry.name } registry is:

  <%doc>Make Markdown add line breaks</%doc>
  ${ court_registry.address.replace('\n', '  \n') }

  Option 2: File the form online through [Court Services Online](https://justice.gov.bc.ca/cso/index.do). You will need to register for an account with Court Services Online and an account with BCeID. You can register for these accounts online, for free.

  Below is a preview of your form.
  
  ${ bcscf3nofc_attachment['final'] }
need: bcscf3nofc
attachment code: bcscf3nofc_attachment['final']
---
objects:
  - bcscf3nofc_attachment: DADict
---
attachment:
    variable name: bcscf3nofc_attachment[i]
    name: NoFC
    filename: NoFC
    skip undefined: True
    pdf template file: f3-w-sched-3.pdf
    fields: 
      - "plaintiff_name": ${ str(plaintiffs[0]) }
      - "respondent_name": ${ str(respondents[0]) }
      - "respondent_name__2": ${ str(respondents[0]) }
      - "plaintiff_name__2": ${ str(plaintiffs[0]) }
      - "plaintiff_address_block": ${ plaintiffs[0].address.block() }
      - "plaintiff_email": ${ plaintiffs[0].email }
      - "signature_date": ${ signature_date }
      # If it is a signature, test which file version we're expecting. leave it empty unless it's the final attachment version
      - "plaintiff_signature": ${ plaintiffs[0].signature if i == 'final' else '' }
      - "plaintiff_name__3": ${ str(plaintiffs[0]) }
      - "court_file_number": ${ court_file_number }
      - "court_registry": ${ court_registry.name }
      - "place_of_trial": ${ court_registry.name }
      - "place_of_trial_registry_address": ${ court_registry.address }
      - "plaintiff_relationship": ${ plaintiff_relationship }
      - "respondent_relationship": ${ respondent_relationship }
      - "plaintiff_and_respondent_did_begin_marriage_like_relationship": ${ plaintiff_and_respondent_did_begin_marriage_like_relationship }
      - "marriage_like_relationship_start_date": ${ marriage_like_relationship_start_date }
      - "plaintiff_and_respondent_did_marry": ${ plaintiff_and_respondent_did_marry }
      - "marriage_date": ${ marriage_date }
      - "plaintiff_and_respondent_did_separate": ${ plaintiff_and_respondent_did_separate }
      - "separation_date": ${ separation_date }
      - "plaintiff_and_respondent_were_divorced": ${ plaintiff_and_respondent_were_divorced }
      - "divorce_date": ${ divorce_date }
      - "nothing_prior_does_relate": ${ nothing_prior_does_relate }
      - "prior_written_agreement_does_relate": ${ prior_written_agreement_does_relate }
      - "prior_written_agreement_date": ${ prior_written_agreement_date }
      - "prior_court_order_does_relate": ${ prior_court_order_does_relate }
      - "prior_court_order_date": ${ prior_court_order_date }
      - "prior_court_proceeding_does_relate": ${ prior_court_proceeding_does_relate }
      - "prior_court_proceeding_file_number": ${ prior_court_proceeding_file_number }
      - "prior_court_proceeding_registry": ${ prior_court_proceeding_registry.name }
      - "plaintiff_is_claiming_divorce": ${ False }
      - "plaintiff_is_claiming_order_respecting_children": ${ False }
      - "plaintiff_is_claiming_spousal_support": ${ True }
      - "plaintiff_is_claiming_family_property_and_debt": ${ False }
      - "plaintiff_is_claiming_alternative_order": ${ False }
      - "plaintiff_is_claiming_order_for_costs": ${ False }
      - "spousal_support_current": ${ spousal_support_current }
      - "claimant_proposes_support": ${ claimant_proposes_support }
      - "spousal_support_proposed": ${ spousal_support_proposed }
      - "claimant_seeks_statutory_order": ${ claimant_seeks_divorce_act_order or claimant_seeks_family_law_act_order }
      - "claimant_seeks_divorce_act_order": ${ claimant_seeks_divorce_act_order }
      - "claimant_seeks_family_law_act_order": ${ claimant_seeks_family_law_act_order }
      - "claimant_income_annual_gross": ${ currency(claimant_income_annual_gross ) }
      - "spouse_income_annual": ${ currency(spouse_income_annual_gross ) }
      - "claimant_knows_spouse_income": ${ claimant_knows_spouse_income }
      - "claimant_does_not_know_spouse_income": ${ not claimant_knows_spouse_income }
      - "spouse_income_facts": ${ spouse_income_facts }
      - "plaintiff_fax": ${ plaintiff_fax }
      - "signer_name": ${ plaintiffs[0].name }
      - "signer_is_plaintiff": ${ True }
---
id: bcscf3nofc review screen
event: review_bcscf3nofc
question: |
  Placeholder Review Screen
subquestion: |
  Edit your answers below
review: 
  - Edit: court_file_number
    button: |
      Court file number:
      ${ court_file_number }
  - Edit: court_registry
    button: |
      Court registry:
      ${ court_registry }
  - Edit: plaintiff_relationship
    button: |
      Brief description of claimant's relationship to other parties to this family law case:
      ${ plaintiff_relationship }
  - Edit: respondent_relationship
    button: |
      Brief description of respondent's relationship to other parties to this family law case:
      ${ respondent_relationship }
  - Edit: plaintiff_and_respondent_did_begin_marriage_like_relationship
    button: |
      Plaintiff and respondent lived together in a marriage-like relationship:
      ${ word(yesno(plaintiff_and_respondent_did_begin_marriage_like_relationship)) }
  - Edit: marriage_like_relationship_start_date
    button: |
      Date the parties' marriage-like relationship began:
      ${ marriage_like_relationship_start_date.format() }
  - Edit: plaintiff_and_respondent_did_marry
    button: |
      Plaintiff and respondent have been married:
      ${ word(yesno(plaintiff_and_respondent_did_marry)) }
  - Edit: marriage_date
    button: |
      Date of marriage:
      ${ marriage_date.format() }
  - Edit: plaintiff_and_respondent_did_separate
    button: |
      Plaintiff and respondent separated:
      ${ word(yesno(plaintiff_and_respondent_did_separate)) }
  - Edit: separation_date
    button: |
      Date of separation:
      ${ separation_date.format() }
  - Edit: plaintiff_and_respondent_were_divorced
    button: |
      Plaintiff and respondent were divorced:
      ${ word(yesno(plaintiff_and_respondent_were_divorced)) }
  - Edit: divorce_date
    button: |
      Date of divorce:
      ${ divorce_date.format() }
  - Edit: nothing_prior_does_relate
    button: |
      There is no agreement, court order or court proceeding already about anything being claimed in this notice:
      ${ word(yesno(nothing_prior_does_relate)) }
  - Edit: prior_written_agreement_does_relate
    button: |
      A prior written agreement relates to something being claimed in this notice:
      ${ word(yesno(prior_written_agreement_does_relate)) }
  - Edit: prior_written_agreement_date
    button: |
      Date of prior written agreement:
      ${ prior_written_agreement_date.format() }
  - Edit: prior_court_order_does_relate
    button: |
      Prior court order does relate to something being claimed in this notice:
      ${ word(yesno(prior_court_order_does_relate)) }
  - Edit: prior_court_order_date
    button: |
      Date of prior court order:
      ${ prior_court_order_date.format() }
  - Edit: prior_court_proceeding_does_relate
    button: |
      Prior court proceeding does relate to something being claimed in this notice:
      ${ word(yesno(prior_court_proceeding_does_relate)) }
  - Edit: prior_court_proceeding_file_number
    button: |
      Prior court proceeding file number:
      ${ prior_court_proceeding_file_number }
  - Edit: prior_court_proceeding_registry
    button: |
      Prior court proceeding registry:
      ${ prior_court_proceeding_registry }
  - Edit: spousal_support_current
    button: |
      Current spousal support:
      ${ spousal_support_current }
  - Edit: claimant_proposes_support
    button: |
      Claimant proposes support:
      ${ word(yesno(claimant_proposes_support)) }
  - Edit: spousal_support_proposed
    button: |
      Spousal support proposed:
      ${ spousal_support_proposed }
  - Edit: claimant_seeks_divorce_act_order
    button: |
      Claimant seeks Divorce Act order:
      ${ word(yesno(claimant_seeks_divorce_act_order)) }
  - Edit: claimant_seeks_family_law_act_order
    button: |
      Claimant seeks Family Law Act order:
      ${ word(yesno(claimant_seeks_family_law_act_order)) }
  - Edit: claimant_income_annual_gross
    button: |
      Claimant's gross annual income:
      ${ currency(claimant_income_annual_gross) }
  - Edit: spouse_income_annual_gross
    button: |
      Spouse's gross annual income:
      ${ currency(spouse_income_annual_gross) }
  - Edit: claimant_knows_spouse_income
    button: |
      Claimant knows spouse's income:
      ${ word(yesno(claimant_knows_spouse_income)) }
  - Edit: spouse_income_facts
    button: |
      Spouse income facts:
      ${ spouse_income_facts }
  - Edit: plaintiff_fax
    button: |
      Plaintiff fax number:
      ${ plaintiff_fax }
  - Edit: plaintiff_lawyer_name
    button: |
      Plaintiff's lawyer's name:
      ${ plaintiff_lawyer_name }
  - Edit: plaintiffs[0]
    button: |
      plaintiffs[0]:
      ${ plaintiffs[0] }
  - Edit: respondents[0]
    button: |
      respondents[0]:
      ${ respondents[0] }
  - Edit: plaintiffs[0].address.address
    button: |
      plaintiffs[0].address.address:
      ${ plaintiffs[0].address.address }
  - Edit: plaintiffs[0].email
    button: |
      plaintiffs[0].email:
      ${ plaintiffs[0].email }
  - Edit: signature_date
    button: |
      signature_date:
      ${ signature_date }
  - Edit: plaintiffs[0].signature
    button: |
      plaintiffs[0].signature:
      ${ plaintiffs[0].signature }
